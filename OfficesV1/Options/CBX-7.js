!function(){"use strict";document.addEventListener("valid-change-checkbox",(e=>{try{const t=e.detail||{},n=t.componentId,r=!!t.dependencies,c=Array.isArray(t.currentValue)?t.currentValue:[],o=c.map((e=>String(e.value))),a=t.jsonPath||null,u=t.continueButtonId||null;if(console.debug("CBX-2: received valid-change-checkbox",{componentId:n,jsonPath:a,currentValue:c,continueButtonId:u,dependencies:r}),!n)return;const i=document.querySelector(`[component-id="${n}"]`);if(!i)return void console.debug("CBX-2: componente no encontrado",n);const l=i.closest("[cf-form-submit]")||document;if(a){let e=i.querySelector(`input[cf-json-path="${a}"]`);if(e||(e=i.querySelector('input[type="hidden"][cf-json-path]')),e)try{e.value=JSON.stringify(c),e.dispatchEvent(new Event("change",{bubbles:!0})),console.debug("CBX-2: updated component hidden",{compHidden:e,newValue:e.value})}catch(e){console.error("CBX-2: error setting hidden value",e)}else console.debug("CBX-2: hidden input no encontrado en el componente para jsonPath",a)}if(!r)return;l.querySelectorAll(`[display-depend="${n}"]`).forEach((e=>{const t=e.getAttribute("match"),n=t?o.includes(String(t).trim()):o.length>0;e.style.display=n?"":"none"}));if(l.querySelectorAll(`[required-depend="${n}"]`).forEach((e=>{const t=e.getAttribute("match"),n=Array.from(e.querySelectorAll("[cf-json-path]")).filter((e=>e&&e.matches&&e.matches("input,textarea,select")));(t?o.includes(String(t).trim()):o.length>0)?n.forEach((e=>{e.setAttribute("data-required","");try{e.dispatchEvent(new Event("change",{bubbles:!0}))}catch(e){}console.debug("CBX-2: set data-required on",e)})):n.forEach((e=>{const t=e.getAttribute("always-required");if("true"===String(t).trim().toLowerCase())console.debug("CBX-2: candidate has always-required, skipping removal for",e);else{e.removeAttribute("data-required");try{!function(e){const t=e.closest("[component-id]");if(!t){try{const t=JSON.parse(e.value||"");e.value=Array.isArray(t)?"[]":"{}"}catch{e.value="[]"}return}const n=(t.getAttribute("input-type")||"checkbox").toLowerCase(),r=t.getAttribute("f-class")||"",c=t.getAttribute("l-class")||"",o=t.querySelector('[role="group"]');e.value="checkbox"===n?"[]":"{}",o&&(o.querySelectorAll("[native-button], input").forEach((e=>{try{e.checked=!1}catch(e){}})),o.querySelectorAll("[c-field]").forEach((e=>{r&&e.classList.remove(r);const t=e.querySelector("[c-label]");t&&c&&t.classList.remove(c)})))}(e)}catch(e){}try{e.dispatchEvent(new Event("change",{bubbles:!0}))}catch(e){}console.debug("CBX-2: removed data-required and cleared",e)}}))})),u)try{document.dispatchEvent(new CustomEvent("trigger-validate-continue",{detail:{continueButtonId:u}}))}catch(e){}}catch(e){console.error("CBX-2 handler error",e)}}))}();